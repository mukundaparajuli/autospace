# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: String
  name: String!
  image: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  admin: Admin
  manager: Admin
  valet: Admin
  customer: Admin
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type LoginOutput {
  token: String!
}

type Admin {
  id: String
  createdAt: DateTime!
  updatedAt: DateTime!
  user: User!
  verifications: [Verification!]!
  verificationCount: Int!
}

type Customer {
  id: ID
  displayName: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  user: User!
  bookings: [Booking!]!
  reviews: [Booking!]!
}

type Booking {
  pricePerHour: Int
  totalPrice: Int
  status: BookingStatus!
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  startTime: DateTime!
  endTime: DateTime!
  vehicleNumber: String!
  phoneNumber: String!
  passcode: String!
  slotId: String!
  customerId: String!
  bookingTimelineId: Int!
  customer: Customer!
  bookingTimelines: [BookingTimeline!]!
  valetAssignments: [ValetAssignment!]!
}

enum BookingStatus {
  BOOKED
  VALET_ASSIGNED_FOR_CHECK_IN
  VALET_PICKED_UP
  CHECKED_IN
  VALET_ASSIGNED_FOR_CHECK_OUT
  CHECKED_OUT
  VALET_RETURNED
}

type Verification {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  verified: Boolean!
  adminId: String!
  garageId: String!
  admin: Admin!
  garage: Admin!
}

type Manager {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  displayName: String!
  companyId: String!
  bookingTimelines: [BookingTimeline!]!
  company: Company!
  user: User!
}

type BookingTimeline {
  status: BookingStatus
  valetId: String
  managerId: String
  id: Int!
  timestamp: DateTime!
  bookingId: String!
  bookingTimeline: Booking!
  valet: Valet!
  manager: Manager!
}

type Company {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  description: String!
  displayName: String!
  managers: [Manager!]!
  valets: [Manager!]!
  garages: [Manager!]!
  slots: [Manager!]!
}

type Address {
  id: String
  createdAt: DateTime!
  updatedAt: DateTime!
  addressName: String!
  lat: Int!
  long: Int!
  garages: [Garage!]!
}

type Garage {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  companyId: String!
  image: [String!]!
  description: String!
  garageName: String!
  addressId: String!
  company: Company!
  address: Company!
  verifications: [Verification!]!
  reviews: [Review!]!
}

type Review {
  comment: String
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  rating: Int!
  customerId: String!
  garageId: String!
  customer: Customer!
  garage: Customer!
}

type ValetAssignment {
  pickUpLat: Int
  pickUpLong: Int
  returnLat: Int
  returnLong: Int
  pickupValetId: String
  returnValetId: String
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  bookingId: String!
  pickupValet: Valet!
  returnValet: Valet!
  booking: Booking!
}

type Valet {
  id: String
  createdAt: DateTime!
  updatedAt: DateTime!
  displayName: String!
  companyId: String!
}

type Query {
  users: [User!]!
  user(where: UserWhereUniqueInput!): User!
  customers: [Customer!]!
  customer(where: CustomerWhereUniqueInput!): Customer!
  admins: [Admin!]!
  admin(where: AdminWhereUniqueInput!): Admin!
  managers: [Manager!]!
  manager(where: ManagerWhereUniqueInput!): Manager!
  companies: [Company!]!
  company(where: CompanyWhereUniqueInput!): Company!
  addresses: [Address!]!
  address(where: AddressWhereUniqueInput!): Address!
  garages: [Garage!]!
  garage(where: GarageWhereUniqueInput!): Garage!
  bookings: [Booking!]!
  booking(where: BookingWhereUniqueInput!): Booking!
  valetAssignments: [ValetAssignment!]!
  valetAssignment(where: ValetAssignmentWhereUniqueInput!): ValetAssignment!
  bookingTimelines: [BookingTimeline!]!
  bookingTimeline(where: BookingTimelineWhereUniqueInput!): BookingTimeline!
  verifications: [Verification!]!
  verification(where: VerificationWhereUniqueInput!): Verification!
  reviews: [Review!]!
  review(where: ReviewWhereUniqueInput!): Review!
}

input UserWhereUniqueInput {
  id: String!
}

input CustomerWhereUniqueInput {
  id: String!
}

input AdminWhereUniqueInput {
  id: String!
}

input ManagerWhereUniqueInput {
  id: String!
}

input CompanyWhereUniqueInput {
  id: String!
}

input AddressWhereUniqueInput {
  id: String!
}

input GarageWhereUniqueInput {
  id: String!
}

input BookingWhereUniqueInput {
  id: String!
}

input ValetAssignmentWhereUniqueInput {
  id: String!
}

input BookingTimelineWhereUniqueInput {
  id: Int!
}

input VerificationWhereUniqueInput {
  id: String!
}

input ReviewWhereUniqueInput {
  id: Int!
}

type Mutation {
  createUserWithCredentailsInput(createUserWithCredentailsInput: RegisterWithCredentialsInput!): User!
  createUserWithProvidersInput(createUserWithProvidersInput: RegisterWithProvidersInput!): User!
  loginUser(loginInput: LoginInput!): LoginOutput!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(where: UserWhereUniqueInput!): User!
  createCustomer(createCustomerInput: CreateCustomerInput!): Customer!
  updateCustomer(updateCustomerInput: UpdateCustomerInput!): Customer!
  removeCustomer(where: CustomerWhereUniqueInput!): Customer!
  createAdmin(createAdminInput: CreateAdminInput!): Admin!
  updateAdmin(updateAdminInput: UpdateAdminInput!): Admin!
  removeAdmin(where: AdminWhereUniqueInput!): Admin!
  createManager(createManagerInput: CreateManagerInput!): Manager!
  updateManager(updateManagerInput: UpdateManagerInput!): Manager!
  removeManager(where: ManagerWhereUniqueInput!): Manager!
  createCompany(createCompanyInput: CreateCompanyInput!): Company!
  updateCompany(updateCompanyInput: UpdateCompanyInput!): Company!
  removeCompany(where: CompanyWhereUniqueInput!): Company!
  createAddress(createAddressInput: CreateAddressInput!): Address!
  updateAddress(updateAddressInput: UpdateAddressInput!): Address!
  removeAddress(where: AddressWhereUniqueInput!): Address!
  createGarage(createGarageInput: CreateGarageInput!): Garage!
  updateGarage(updateGarageInput: UpdateGarageInput!): Garage!
  removeGarage(where: GarageWhereUniqueInput!): Garage!
  createBooking(createBookingInput: CreateBookingInput!): Booking!
  updateBooking(updateBookingInput: UpdateBookingInput!): Booking!
  removeBooking(where: BookingWhereUniqueInput!): Booking!
  createValetAssignment(createValetAssignmentInput: CreateValetAssignmentInput!): ValetAssignment!
  updateValetAssignment(updateValetAssignmentInput: UpdateValetAssignmentInput!): ValetAssignment!
  removeValetAssignment(where: ValetAssignmentWhereUniqueInput!): ValetAssignment!
  createBookingTimeline(createBookingTimelineInput: CreateBookingTimelineInput!): BookingTimeline!
  updateBookingTimeline(updateBookingTimelineInput: UpdateBookingTimelineInput!): BookingTimeline!
  removeBookingTimeline(where: BookingTimelineWhereUniqueInput!): BookingTimeline!
  createVerification(createVerificationInput: CreateVerificationInput!): Verification!
  updateVerification(updateVerificationInput: UpdateVerificationInput!): Verification!
  removeVerification(where: VerificationWhereUniqueInput!): Verification!
  createReview(createReviewInput: CreateReviewInput!): Review!
  updateReview(updateReviewInput: UpdateReviewInput!): Review!
  removeReview(where: ReviewWhereUniqueInput!): Review!
}

input RegisterWithCredentialsInput {
  id: String
  image: String
  name: String!
  email: String!
  password: String!
}

input RegisterWithProvidersInput {
  id: String
  name: String!
  image: String!
  type: AuthProviderType
}

enum AuthProviderType {
  GOOGLE_PROVIDER
  GITHUB_PROVIDER
  CREDENTIALS
}

input LoginInput {
  email: String!
  password: String!
}

input UpdateUserInput {
  id: String!
}

input CreateCustomerInput {
  id: ID
  displayName: String!
}

input UpdateCustomerInput {
  id: String!
  displayName: String
}

input CreateAdminInput {
  id: String
}

input UpdateAdminInput {
  id: String!
}

input CreateManagerInput {
  id: String!
  displayName: String!
  companyId: String!
}

input UpdateManagerInput {
  id: String!
  displayName: String
  companyId: String
}

input CreateCompanyInput {
  id: String!
  description: String!
  displayName: String!
}

input UpdateCompanyInput {
  id: String!
  description: String
  displayName: String
}

input CreateAddressInput {
  id: String
  addressName: String!
  lat: Int!
  long: Int!
}

input UpdateAddressInput {
  id: String!
  addressName: String
  lat: Int
  long: Int
}

input CreateGarageInput {
  id: String!
  companyId: String!
  image: [String!]!
  description: String!
  garageName: String!
  addressId: String!
}

input UpdateGarageInput {
  id: String!
  companyId: String
  image: [String!]
  description: String
  garageName: String
  addressId: String
}

input CreateBookingInput {
  pricePerHour: Int
  totalPrice: Int
  id: String!
  startTime: DateTime!
  endTime: DateTime!
  vehicleNumber: String!
  phoneNumber: String!
  passcode: String!
  slotId: String!
  customerId: String!
  bookingTimelineId: Int!
}

input UpdateBookingInput {
  pricePerHour: Int
  totalPrice: Int
  id: String!
  startTime: DateTime
  endTime: DateTime
  vehicleNumber: String
  phoneNumber: String
  passcode: String
  slotId: String
  customerId: String
  bookingTimelineId: Int
}

input CreateValetAssignmentInput {
  id: String!
  bookingId: String!
}

input UpdateValetAssignmentInput {
  id: String!
  bookingId: String
}

input CreateBookingTimelineInput {
  status: BookingStatus
  bookingId: String!
}

input UpdateBookingTimelineInput {
  status: BookingStatus
  bookingId: String
  id: Int!
}

input CreateVerificationInput {
  id: String!
  verified: Boolean!
  adminId: String!
  garageId: String!
}

input UpdateVerificationInput {
  id: String!
  verified: Boolean
  adminId: String
  garageId: String
}

input CreateReviewInput {
  comment: String
  id: Int!
  rating: Int!
  customerId: String!
  garageId: String!
}

input UpdateReviewInput {
  comment: String
  id: Int!
  rating: Int
  customerId: String
  garageId: String
}